###############################################################################
# Zsh settings file for Greg Fitzgerald <netzdamon@gmail.com> 
#
# Most recent update: Sat 10 Nov 2007 02:32:47 PM EST
#
###############################################################################
if ! [ -d ~/.ssh ]; then
    mkdir -p ~/.ssh
fi

if ! [ -f ~/.ssh/known_hosts ]; then
    touch ~/.ssh/known_hosts
fi

if ! [ -f ~/.viminfo ]; then
    touch ~/.viminfo
fi
##############################################################################
#       Clear screen on logout
##############################################################################
trap clear 0
# ############################################################################
# colors for ls, etc.  Prefer ~/.dir_colors
# ############################################################################
if [[ -f ~/.dir_colors ]]; then
	eval `dircolors -b ~/.dir_colors`
else
	eval `dircolors -b /etc/DIR_COLORS`
fi
# #############################################################################
# fix vmware
##############################################################################

alias vmware='VMWARE_USE_SHIPPED_GTK=yes vmware'

fortune -c
alias lock='alock -auth pam -bg blank:color=white'

if [ $DISPLAY ]; then
    export TERM=rxvt-256color
fi

#Burning a bin/cue
DEV="/dev/cdrom1"
SPEED="32"
  alias burncue='cdrdao write --device $DEV --speed $SPEED --eject --driver generic-mmc '

#par2repair
  alias pa2='par2repair'

# Test for an interactive shell.  There is no need to set anything
# past this point for scp and rcp, and it's important to refrain from
# outputting anything in those cases.
##############################################################################
if [[ $- != *i* ]]; then
	# Shell is non-interactive.  Be done now
	return
fi
#############################################################################
#       OS specific settings
#############################################################################
case `uname` in
	OpenBSD)
        # Enviroment Varibles 
        export PKG_PATH='ftp://ftp.openbsd.org/pub/4.1/packages/i386'
  
	    # Which version of ls should we use?
	    if [ -x /usr/local/bin/gls ]; then
		    alias ls='/usr/local/bin/gls -F --color --human-readable'
		    export LS_COLORS="no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;3:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:"
	    else
		    if [ -x /usr/local/bin/colorls ]; then
		        alias ls='/usr/local/bin/colorls -G -F'
		        export LSCOLORS="ExGxFxDxCxDxDxxbadacad"
		    fi
	    fi
	    # Aliases
    	alias cvsup="cd /usr; cvs -d anoncvs@anoncvs1.usa.openbsd.org:/cvs checkout -P -rOPENBSD_4_0 src"
	    alias cvsrun="sudo cvsup -g -L 2 /etc/cvs-supfile"
     	alias killall="pkill"
   	    alias shred="rm -P"
	;;
	FreeBSD)
        export SSH_ASKPASS="/usr/local/bin/ssh-askpass-gtk2"
        export LSCOLORS=ExCxFxFxBxGxGxababaeae
        export CLICOLOR=$LSCOLORS
    
        alias ls='ls -GF'
   	    alias portu="sudo csup -L 2 /etc/ports-cvsup"
      	alias srcu="sudo csup -L 2 /etc/src-cvsup"
   ;;
	Linux)
	    export SSH_ASKPASS="/usr/bin/gtk2-ssh-askpass"
        export SKIP_FUNCTIONS="test"
        
        function paludis-scm {
            export PALUDIS_OPTIONS="--dl-reinstall-scm daily"
            paludis $1 $2
            export PALUDIS_OPTIONS="--dl-reinstall-scm never"
        }

	    #aliases
        alias ls='ls -F --color --human-readable'
	    alias ms="mirrorselect -b10 -s5 -D "
        export PALUDIS_OPTIONS="--show-reasons summary --dl-reinstall-scm weekly --log-level warning --dl-reinstall if-use-changed --show-use-descriptions changed"
    
       # if [ -f /etc/profile.env ]; then
       #     source /etc/profile.env
       # fi
	;;
esac
################################################################################
#      Enviroment Variables
################################################################################
#export MAILCHECK=10
export MAILDIR="${HOME}/mbox"
export MAIL="${HOME}/mbox/inbox"
export VISUAL="vim"
export EDITOR="vim"
export RSYNC_RSH="ssh"
#export MANPAGER="col -b | view -c 'set ft=man nomod nolist' -"
export MANPAGER="vimmanpager"
#export LANG=en_US.utf8
#export LC_CTYPE=en_US.utf8
export TZ=EST5EDT
export LC_ALL=en_US.UTF8
export LANG=en_US.UTF8
export PAGER="most"
export GIT_AUTHOR_EMAIL="mike@marskreations.com"
export GIT_AUTHOR_NAME="Mike Reynolds"
export GIT_COMMITTER_EMAIL="mike@marskreations.com"
export MPD_HOST="127.0.0.1"
export MPD_PORT="6600"
export CVS_RSH='ssh'
export RSYNC_RSH='ssh'
################################################################################
# Resource Limits
################################################################################
limit stack 8192
#limit core 9999 
limit core 0
limit -s
###############################################################################
# Setup History Options
################################################################################
HISTSIZE=5000
HISTFILE=${HOME}/.history_zsh
SAVEHIST=5000
################################################################################
# Term Settings
################################################################################
#auto logout after timeout in seconds
TMOUT=1800

# if we are in X then disable TMOUT
case $TERM in
  *xterm*|rxvt|(dt|k|E)term)
    unset TMOUT
  ;;
esac

case $TERM in
  *xterm*|rxvt|(dt|k|E)term)
	## display user@host and full dir in *term title
	precmd () {
		print -Pn  "\033]0;%n@%m %~\007"
		}
	## display user@host and name of current process in *term title
	preexec () {
    print -Pn "\033]0;%n@%m <$1> %~\007"
		}
	;;
esac
################################################################################
#       Default Aliases
################################################################################
alias xlog="sudo grep --binary-files=without-match --color -nsie '(EE)' -e '(WW)' /var/log/Xorg.0.log"
alias which="whence"
alias sd='export DISPLAY=:0.0'
alias ctar="tar -cvpf"
alias cpan="perl -MCPAN -e shell"
alias cup='cvs -z3 update -Pd'
alias mv='nocorrect /bin/mv'
alias rm='nocorrect /bin/rm -i'
alias shred='/usr/bin/shred -fuz'
alias cp='nocorrect /bin/cp'
alias man='nocorrect man'
alias mkdir='nocorrect /bin/mkdir -p'
alias find='noglob find'
alias wget="wget -c"
alias lsd='ls -Fld *(-/DN)'
alias cgrep='grep --binary-files=without-match --color -nsi'
alias xine="xine -g"
alias weather="/home/gregf/.conky/weather.rb"
alias mpalyer="mplayer"
alias mplyaer="mplayer"
alias ncmpc="ncmpc -c"
alias dm="nexuiz +connect gregf.org"
alias fixdbus="sudo -s dbus-uuidgen --ensure"
alias fspot="dbus-launch f-spot"
alias nautilus="nautilus --no-desktop"
alias wp="feh --bg-scale"
alias m="mplayer"
alias e="gvim"
alias t="thunar"
alias p="paludis"
alias repo='cd /var/paludis/repositories'
alias blog='cd /home/gregf/code/rails_apps/blog/'
alias scm='cd /home/gregf/code/scm/'
alias sc='script/console'
alias ss='script/server'
alias diff='colordiff'
alias vmware='VMWARE_USE_SHIPPED_GTK=yes vmware'
alias nv='sudo paludis -i nvidia-drivers'
alias burniso='wodim -v dev=/dev/cdrw'
alias usepretend='sudo paludis -ip --dl-reinstall if-use-changed everything'
alias usedo='sudo paludis -i --dl-reinstall if-use-changed everything'
alias use='sudo vim /etc/paludis/use.conf'
alias ketchup='ketchup -G'
alias ri="LESS='-fREXMM' ri -f ansi"
alias whats_installed="eix -I --nocolor -c > /tmp/installed.txt && most /tmp/installed.txt && rm /tmp/installed.txt"
alias usatunnel='ssh -TfND 7777 isp4cheap'
alias uktunnel='ssh -TfND 7777 norush'
alias pimpc='paludis -ip everything'
alias pimp='paludis -i everything --continue-on-failure if-independent'
alias mountiso='sudo mount -o loop '
alias tuxguitar='/opt/TuxGuitar-0.9.1/tuxguitar'
# Added by Mike Reynolds Monday 12 03
# Mon 03 Dec 2007 02:20:55 AM EST
alias gems='gem search -b'
alias ml='cd ~/projects/benetech/Linux' 
alias gregf='cd ~/projects/gregf'
################################################################################
# Functions and Completion 
################################################################################
# Magically quote urls
autoload -U url-quote-magic
zle -N self-insert url-quote-magic

compctl -g '*(-/)' + -g '.*(-/)' -v cd pushd rmdir dirs chdir

# completion for "man" by Gossamer <gossamer@tertius.net.au> 980827
compctl -f -x 'S[1][2][3][4][5][6][7][8][9]' -k '(1 2 3 4 5 6 7 8 9)' \
  - 'R[[1-9nlo]|[1-9](|[a-z]),^*]' -K 'match-man' \
  - 's[-M],c[-1,-M]' -g '*(-/)' \
  - 's[-P],c[-1,-P]' -c \
  - 's[-S],s[-1,-S]' -k '( )' \
  - 's[-]' -k '(a d f h k t M P)' \
  - 'p[1,-1]' -c + -K 'match-man' \
  -- man

if [ -f ~/.ssh/known_hosts ]; then
    local _myhosts
    _myhosts=( ${${${${(f)"$(<$HOME/.ssh/known_hosts)"}:#[0-9]*}%%\ *}%%,*} )
    zstyle ':completion:*' hosts $_myhosts
fi

################################################################################
# Custom Functions
################################################################################
function startx {
  #nvidia settings
  export __GL_SYNC_TO_VBLANK=0
  export __GL_FSAA_MODE=3
  export _GL_LOG_MAX_ANISO="3"
  # for antialiasing in gtk2 / qt
  export GDK_USE_XFT=1
  export QT_XFT=1
  /usr/bin/startx -- +bs -dpi 104 -nolisten tcp -quiet
}

function qemiso {
    qemu -boot d -m 384 -smp 2 -localtime \
    -net nic \
    -net user \
    -no-fd-bootchk -no-acpi -cdrom $1
}

# keep these around to try with vde again later on
#-net vde,vlan=0,sock=/var/run/vde.ctl \
#-net nic,vlan=0,macaddr 52:54:00:00:AA:02 \

function qeminst {
    echo "Supply disk.img and path to iso or drive for installing from"
    qemu -boot d -m 384 -smp 2 -localtime \
    -net nic \
    -net user \
    -no-fd-bootchk -no-acpi \
    -hda ~/qemu/$1 -cdrom $2
}

function qemrun {
    echo "Supply drive image to boot from"
    qemu -boot c -m 384 -smp 2 -localtime \
    -net nic \
    -net user \
    -no-fd-bootchk -no-acpi -hda ~/qemu/$1
}

function pskill {
	kill -9 `pgrep $1`
	echo "slaughtered."
}


function kscreen {
    echo -ne "\017"
    reset
}

function spell { echo "$1" | aspell -a }

function date {
    if [ $# = 0 ]; then
        # Format: Saturday, December 21, 2002 06:46:38 PM EST
        command date +"%A, %B %e %Y %I:%M:%S %p %Z"
    else
        # Execute real `date'
        command date $@
    fi
}

#function to clean up web permissions.
function fixwww {
DIRPERM="0755"
FILEPERM="0644"
USER="miker"
GROUP="miker"
echo " * Are you in the correct directory? (yes/no)"
pwd
 read input
  if [ "$input" = "yes" ]; then
    echo " ! Fixing up WWW Permissions"
    echo "   Fixing File Permissions"
    find . -type f -print0 | xargs -0 chmod $FILEPERM
	  find . -type f -print0 | xargs -0 chown $USER:$GROUP
    echo "   Fixing Directory Permissions"
    find . -type d -print0 | xargs -0 chmod $DIRPERM
	  find . -type d -print0 | xargs -0 chown $USER:$GROUP
     echo " * done."
  else
     echo " ! Invalid response."
 fi
}

function mcdrom {
    local mounted
    local cpwd
    mounted=$(grep cdrom /etc/mtab)
    if [[ $mounted = "" ]];then
        mount /mnt/cdrom
        echo "-- mounted cdrom --"
        cd /mnt/cdrom ; ls
        else
        cpwd=$(pwd|grep cdrom)
        if [[ $cpwd = "" ]];then
            umount /mnt/cdrom
            echo "-- umounted cdrom --"
            else
            cd;umount /mnt/cdrom
            echo "-- umounted cdrom --"
            pwd
        fi
    fi
}

function open {
        if [[ -f "$1" ]]
        then
                case "$1" in
                      (*.tar.bz2) tar -xvjf "$1" ;;
                      (*.tar.gz) tar -xvzf "$1" ;;
                      (*.ace) unace e "$1" ;;
                      (*.rar) unrar x "$1" ;;
                      (*.deb) ar -x "$1" ;;
                      (*.bz2) bzip2 -d "$1" ;;
                      (*.lzh) lha x "$1" ;;
                      (*.gz) gunzip -d "$1" ;;
                      (*.tar) tar -xvf "$1" ;;
                      (*.tgz) gunzip -d "$1" ;;
                      (*.tbz2) tar -jxvf "$1" ;;
                      (*.zip) unzip "$1" ;;
                      (*.Z) uncompress "$1" ;;
                      (*.shar) sh "$1" ;;
                      (*) echo "'"$1"' Error. Please go away" ;;
                esac
        else
                echo "'"$1"' is not a valid file"
        fi
}

function mps { /bin/ps $@ -u $USER -o pid,%cpu,%mem,bsdtime,command ; }

function ech { 
    CHPTH=`eix --only-names -e $1` 
    most /usr/portage/$CHPTH/ChangeLog 
}

################################################################################
# Get keys working
################################################################################
#
# For this to work you have to first run 'zsh /usr/share/zsh/4.1.0_pre7/functions/Misc/zkbd'.
# The location of this script on your system may vary.
# Also note you must change the 'source' line below to match your zkbd config.
bindkey -v
case `echo $TERM` in
    linux)
    source ~/.zkbd/linux-pc-linux-gnu
    ;;
    xterm-color)
    source ~/.zkbd/xterm-color-pc-linux-gnu
    ;;
    xterm)
    source ~/.zkbd/xterm-pc-linux-gnu
    ;;
    rxvt)
    source ~/.zkbd/mrxvt-pc-linux-gnu
    ;;
esac

[[ -n ${key[Left]} ]] && bindkey "${key[Left]}" backward-char
[[ -n ${key[Right]} ]] && bindkey "${key[Right]}" forward-char
[[ -n ${key[Up]} ]] && bindkey "${key[Up]}" up-history
[[ -n ${key[Down]} ]] && bindkey "${key[Down]}" down-history
[[ -n ${key[Home]} ]] && bindkey "${key[Home]}" beginning-of-line
[[ -n ${key[End]} ]] && bindkey "${key[End]}" end-of-line
[[ -n ${key[Delete]} ]] && bindkey "${key[Delete]}" delete-char

case $TERM in
	linux)
    source ~/.zkbd/linux-pc-linux-gnu
		bindkey "^[[2~" yank
		bindkey "^[[3~" delete-char
		bindkey "^[[5~" up-line-or-history ## PageUp
		bindkey "^[[6~" down-line-or-history ## PageDown
		bindkey "^[[4~" end-of-line
		bindkey "^[e" expand-cmd-path
		bindkey "^[[A" up-line-or-search ## up arrow for back-history-search
		bindkey "^[[B" down-line-or-search ## down arrow for fwd-history-search
		bindkey " " magic-space ## do history expansion on space
		bindkey "^[[1~" beginning-of-line
	;;
	 xterm|xterm-color)
    source ~/.zkbd/xterm-pc-linux-gnu
		bindkey "^[[2~" yank
		bindkey "^[[3~" delete-char
		bindkey "^[[5~" up-line-or-history ## PageUp
		bindkey "^[[6~" down-line-or-history ## PageDown
		bindkey "^[[7~" beginning-of-line
		bindkey "^[[8~" end-of-line
		bindkey "^[e" expand-cmd-path ## C-e for expanding path of typed command
		bindkey "^[[A" up-line-or-search ## up arrow for back-history-search
		bindkey "^[[B" down-line-or-search ## down arrow for fwd-history-search
   	bindkey " " magic-space ## do history expansion on space
	;;
	 rxvt|*rxvt|rxvt*)
          source ~/.zkbd/mrxvt-pc-linux-gnu
		bindkey "^[[2~" yank
		bindkey "^[[3~" delete-char
		bindkey "^[[5~" up-line-or-history ## PageUp
		bindkey "^[[6~" down-line-or-history ## PageDown
		bindkey "^[[7~" beginning-of-line
		bindkey "^[[8~" end-of-line
		bindkey "^[e" expand-cmd-path ## C-e for expanding path of typed command
		bindkey "^[[A" up-line-or-search ## up arrow for back-history-search
		bindkey "^[[B" down-line-or-search ## down arrow for fwd-history-search
         	bindkey " " magic-space ## do history expansion on space
	;;

esac

###############################################################################
# Autocomplete for current dir on filetypes
################################################################################
# Set Prompt
#autoload -U promptinit
#promptinit
#source ~/.zsh/prompt_gentoo_setup
if [ "`id -u`" != "0" ]; then
    PROMPT=$'%{\e[01;32m%}%n@%m%{\e[0m%}[%{\e[01;34m%}%3~%{\e[0;m%}]%% '
else
     PROMPT=$'%{\e[01;31m%}%n@%m%{\e[0m%}[%{\e[01;34m%}%3~%{\e[0;m%}]%# '
fi
# Follow GNU LS_COLORS
zmodload -i zsh/complist
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*:*:kill:*' list-colors '=%*=01;31'

autoload -U compinit
compinit

compctl -g '*.Z *.gz *.tgz' + -g '*' zcat gunzip open
compctl -g '*.tar.Z *.tar.gz *.tgz *.tar.bz2' + -g '*' tar open
compctl -g '*.zip *.ZIP' + -g '*' unzip zip open
compctl -g '*.rar *.RAR' + -g '*' rar unrar open
compctl -g '*.(mp3|MP3|ogg|OGG|WAV|wav)' + -g '*(-/)'  ogg123 mpg123 audacious wma123 mplayer
compctl -g '*.(divx|DIVX|m4v|M4V|wmv|WMV|avi|AVI|mpg|mpeg|MPG|MPEG|WMV|wmv|mov|MOV|wma|WMA|w4a|W4A)' + -g '*(-/)'  xine mplayer kmplayer gmplayer vlc
compctl -g '*.(pdf|PDF|ps|PS|tiff|TIFF)' + -g '*(-/)' evince acroread xpdf epdfview
compctl -g '*.(jpg|JPG|jpeg|JPEG|gif|GIF|tiff|TIFF|png|PNG)' + -g '*(-/)' feh gthumb xv 

#compdef -a _portage emerge

# Select Prompt
zstyle ':completion:*' menu select=1

# Expansion options
zstyle ':completion:*' completer _complete _prefix
zstyle ':completion::prefix-1:*' completer _complete
zstyle ':completion:incremental:*' completer _complete _correct
zstyle ':completion:predict:*' completer _complete

# Completion caching
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion::complete:*' cache-path ~/.zsh/cache/$HOST

# Expand partial paths
zstyle ':completion:*' expand 'yes'
zstyle ':completion:*' squeeze-slashes 'yes'

# Include non-hidden directories in globbed file completions
# for certain commands

zstyle ':completion::complete:*' '\'

# Use menuselection for pid completion
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always
zstyle ':completion:*:processes' command 'ps -au$USER'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;32'

#  tag-order 'globbed-files directories' all-files 
zstyle ':completion::complete:*:tar:directories' file-patterns '*~.*(-/)'

# Don't complete backup files as executables
zstyle ':completion:*:complete:-command-::commands' ignored-patterns '*\~'

# Separate matches into groups
zstyle ':completion:*:matches' group 'yes'

# With commands like rm, it's annoying if you keep getting offered the same
# file multiple times. This fixes it. Also good for cp, et cetera..
#zstyle ':completion:*:rm:*' ignore-line yes
#zstyle ':completion:*:cp:*' ignore-line yes

# Describe each match group.
zstyle ':completion:*:descriptions' format "%B---- %d%b"

# Messages/warnings format
zstyle ':completion:*:messages' format '%B%U---- %d%u%b' 
zstyle ':completion:*:warnings' format '%B%U---- no match for: %d%u%b'
 
# Describe options in full
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'

#  tag-order 'globbed-files directories' all-files 
#zstyle ':completion::complete:*:tar:directories' file-patterns '*~.*(-/)'

# Don't complete backup files as executables
#zstyle ':completion:*:complete:-command-::commands' ignored-patterns '*\~'

setopt                       \
     NO_all_export           \
        always_last_prompt   \
        always_to_end        \
        share_history        \
        append_history       \
        auto_cd              \
        auto_list            \
        auto_menu            \
        auto_name_dirs       \
        auto_param_keys      \
        auto_param_slash     \
        auto_pushd           \
        auto_remove_slash    \
     NO_auto_resume          \
        bad_pattern          \
        bang_hist            \
     NO_beep                 \
        brace_ccl            \
        NO_correct_all       \
     NO_bsd_echo             \
        NO_cdable_vars       \
     NO_chase_links          \
        clobber              \
        complete_aliases     \
        complete_in_word     \
        NO_correct           \
     NO_correct_all          \
        csh_junkie_history   \
     NO_csh_junkie_loops     \
     NO_csh_junkie_quotes    \
     NO_csh_null_glob        \
        equals               \
        extended_glob        \
        extended_history     \
        function_argzero     \
        glob                 \
     NO_glob_assign          \
        glob_complete        \
     NO_glob_dots            \
        glob_subst           \
     NO_hash_cmds            \
     NO_hash_dirs            \
        hash_list_all        \
        hist_allow_clobber   \
        hist_beep            \
        hist_ignore_dups     \
        hist_ignore_space    \
     NO_hist_no_store        \
        hist_verify          \
     NO_hup                  \
     NO_ignore_braces        \
     NO_ignore_eof           \
        interactive_comments \
      	inc_append_history   \
     NO_list_ambiguous       \
     NO_list_beep            \
        list_types           \
        long_list_jobs       \
        magic_equal_subst    \
     NO_mail_warning         \
     NO_mark_dirs            \
        menu_complete        \
        multios              \
        nomatch              \
        notify               \
     NO_null_glob            \
        numeric_glob_sort    \
     NO_overstrike           \
        path_dirs            \
        posix_builtins       \
     NO_print_exit_value     \
     NO_prompt_cr            \
        prompt_subst         \
        pushd_ignore_dups    \
     NO_pushd_minus          \
        pushd_silent         \
        pushd_to_home        \
        rc_expand_param      \
     NO_rc_quotes            \
     NO_rm_star_silent       \
     NO_sh_file_expansion    \
        sh_option_letters    \
        short_loops          \
     NO_sh_word_split        \
     NO_single_line_zle      \
     NO_sun_keyboard_hack    \
        unset                \
     NO_verbose              \
        zle		             \
     NO_equals

################################################################################
# Setup Path
################################################################################
#PATH="$PATH:/usr/lib/ccache/bin:/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin:${HOME}/code/bin:/opt/kde/bin:/opt/virtualbox:/usr/share/texmf/bin:/usr/lib/jre1.5.0_10/bin:/usr/games/bin"
PATH="$PATH:/usr/lib/ccache/bin:/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin:${HOME}/code/bin:/opt/kde/bin:/opt/virtualbox:/usr/share/texmf/bin:/usr/lib/jvm/sun-jdk-1.6/jre/bin:/usr/games/bin"

if [ "`id -u`" = "0" ]; then
  echo $PATH | grep /usr/local/sbin 1> /dev/null 2> /dev/null
   PATH="/usr/local/sbin:/usr/sbin:/sbin:$PATH"
   # hack to fix "Can not write to history" after leaving sudo or su
   # sudo does not export enviroment vars
   export EDITOR="vim"
   SAVEHIST=10000
   HISTFILE=~root/.history_zsh
   HISTSIZE=10000
   umask 077
fi

CDPATH="~/code/bin"
typeset -gU path cdpath manpath fpath
export PATH
################################################################################
# Set global unmask
################################################################################
#umask 077 #Safe permissions
umask 022 #More usefull for me

# Run devtodo if not root,  to annoy me to do something.
if [ -x /usr/bin/devtodo ]; then 
  if [ "`id -u`" != "0" ]; then
    /usr/bin/devtodo -c
  fi
fi

# display todo list if there is a .todo in cwd
function cd {
  if builtin cd "$@"; then
    devtodo
  fi
}
