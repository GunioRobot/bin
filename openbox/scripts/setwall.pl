#!/usr/bin/perl -w
# Title: Script for setting backgrounds on pekwm 
# Author: cored
# Contributors: Ston
# Date: 27/12/03
# File: setwall.pl (pipemenu for pekwm)
# License: GPL
# Version: 0.1c
# Comments: You have to specified the directory where you have your wallpapers 
# eg. /path/to/setwall.pl -d /path/dir/to/backgrounds
# Requirements: 
#	Eterm, because the script use Esetroot for setting the walls
#	       but is not mandatory you can use whatever software you want
#	       for setting the wallpaper.
# Changelog: 
#    - 15/06/04
#       The addition of the $cmd var where you can specified the command for 
#    	setting wallpapers
#    	Validate only images files
#    	Now the script let the wallpaper even if you reload the theme or pekwm
#       start file overwrite fix
#    - 09/07/04
#	Now it can search into directories

# Pragmas loading 
use strict;

# Modules loading
use Getopt::Long;

# Variable declaration
my $cmd 	= 'Esetroot -s';
my $path_start 	= $ENV{HOME}.'/.pekwm/start';# Where you have your 'start' 
					     # file, now is 
			                     # using the default 
my $help 	= '';
my $dir		= '';
my $wal		= '';


# Function declaration
# usage(): Show the usage message of the script
sub usage {
	print "Usage: $0 [OPTION] <dir>
   	With this script you can put your favorite wallpaper on pekwm
	you have to know that you only need one of the two options. 

	Options:
		-d --dir  : The wallpapers directory
		-w --wal  : Sets the wallpaper
		-h --help : Show this screen \n";
}

# show_menu($dir): Create the menu entries for the root menu
sub show_menu {
	my $dir= shift;
	# Settings for putting the same last wallpaper
	opendir (DIR, "$dir") || die "Can't opendir $dir: $!";
	my @all= readdir DIR;
	#grep { /\w+/i } readdir DIR;
	closedir DIR;

	print "Dynamic {\n";
	foreach my $i (@all) {
		if ( $i ne "." && $i ne ".." ) {
			if ( -d $dir.$i ) {	
				print "Submenu \"$i\" {\n";
				opendir (DIR,"$dir/$i") || die "Can't opendir $dir.$i: $!";			
				my @walls = grep { /\.(gif|jpe?g|png)$/i } readdir DIR;
				close DIR;
				foreach my $w ( @walls ) {
					my $p = $w;
					# Taking out the leading extention for
					# the menu entry
					$p=~s|\.\w+||g;
					$p=~s/(^\w)/\U$1/;
					# Creating the menu entry 
					print "Entry =\"$p\" { Actions = \"Exec $0 -w $dir$i/$w\"}\n";
				}
				print "}\n";
			}
		}
	}
	print "}\n";
}

# set_background: Set the wallpaper 
sub set_background {
	my $wallpaper = shift;
	my $cmd_safe=$cmd." ".$wallpaper."&";
	my @start_file;

	system($cmd_safe);
	# Setting the wallpaper as the default 
	if ( -s $path_start ) {
		open (STR, "$path_start") or die "Can't open file $!";
		@start_file=<STR>;
		close STR;
		open (STO, ">$path_start") or die "Can't open file $!";
		foreach my $line ( @start_file ) {
			if ( $line =~ /$cmd/ ) {	
				print STO $cmd_safe;
			} else {
				print STO $line;
			}	
		}
		close STO;
	} else { 
		open (STO, ">$path_start") or die "Can't open file $!";
		print STO "#!/bin/bash\n";
		print STO "# start file generated by setwall\n";
		print STO $cmd_safe;
		close STO;
	} # end if ( -f $path_start );
	chmod 0755, $path_start; # Setting the permissions to the file
}

# Getting the command line switches
GetOptions('help'=>\$help,'dir=s'=>\$dir,'wal=s'=>\$wal);

if ( $help ) { usage(); }
if ( $dir ) { show_menu($dir); }
if ( $wal ) { set_background($wal); }
